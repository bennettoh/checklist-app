{"version":3,"sources":["components/Form.js","components/Entry.js","App.js","index.js"],"names":["Form","state","value","props","defaultValue","handleChange","event","setState","target","handleSubmit","preventDefault","onSubmit","alert","this","className","TextField","type","placeholder","onChange","IconButton","Add","color","Check","React","Component","Entry","editModeOn","handleEditToggle","handleEdit","editItem","index","key","onClick","onSwap","ArrowDropUp","ArrowDropDown","Typography","display","variant","Edit","Delete","delete","App","items","addItem","itemObj","Date","getTime","toString","concat","filter","item","location","editedList","editedItem","swap","indexA","indexB","array","length","temp","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afcec954.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Check, Add } from \"@material-ui/icons\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\n\r\nimport \"./Form.css\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    value: this.props.defaultValue,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.value === \"\") {\r\n      alert(\"Input is blank\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"flex center\">\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"Write a description\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n          className=\"stretch\"\r\n        />\r\n        {this.props.defaultValue === \"\" ? (\r\n          <IconButton type=\"submit\">\r\n            <Add color=\"action\" />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton type=\"submit\">\r\n            <Check color=\"action\" />\r\n          </IconButton>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nimport { ArrowDropDown, ArrowDropUp, Edit, Delete } from \"@material-ui/icons\";\r\n\r\nimport \"./Entry.css\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nclass Entry extends React.Component {\r\n  state = {\r\n    editModeOn: false,\r\n  };\r\n\r\n  handleEditToggle = () => {\r\n    this.setState({\r\n      editModeOn: !this.state.editModeOn,\r\n    });\r\n  };\r\n\r\n  handleEdit = (value) => {\r\n    this.handleEditToggle();\r\n    this.props.editItem(value, this.props.index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div key={this.props.index} className=\"card\">\r\n        <section className=\"arrows\">\r\n          <IconButton\r\n            onClick={() =>\r\n              this.props.onSwap(this.props.index, this.props.index - 1)\r\n            }\r\n          >\r\n            <ArrowDropUp color=\"action\" />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() =>\r\n              this.props.onSwap(this.props.index, this.props.index + 1)\r\n            }\r\n          >\r\n            <ArrowDropDown color=\"action\" />\r\n          </IconButton>\r\n        </section>\r\n        {this.state.editModeOn ? (\r\n          // Edit mode on\r\n          <>\r\n            <Form onSubmit={this.handleEdit} defaultValue={this.props.value} />\r\n          </>\r\n        ) : (\r\n          // Edit mode off\r\n          <div className=\"flex\">\r\n            <div className=\"flex\">\r\n              <div className=\"column\">\r\n                <Typography\r\n                  className=\"item-text\"\r\n                  display=\"inline\"\r\n                  variant=\"body1\"\r\n                >\r\n                  {this.props.value}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <Edit color=\"action\" onClick={() => this.handleEditToggle()} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"column\">\r\n          <Delete\r\n            color=\"action\"\r\n            onClick={() => this.props.delete(this.props.index)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Entry;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Entry from \"./components/Entry\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    items: [],\r\n  };\r\n\r\n  addItem = (value) => {\r\n    let itemObj = { value: value, key: new Date().getTime().toString() };\r\n    this.setState({\r\n      items: this.state.items.concat(itemObj),\r\n    });\r\n  };\r\n\r\n  delete = (index) => {\r\n    this.setState({\r\n      items: this.state.items.filter((item, location) => {\r\n        return location !== index;\r\n      }),\r\n    });\r\n  };\r\n\r\n  editItem = (value, index) => {\r\n    let editedList = this.state.items;\r\n    let editedItem = {\r\n      value: value,\r\n      key: editedList[index].key,\r\n    };\r\n    editedList[index] = editedItem;\r\n\r\n    this.setState({\r\n      items: editedList,\r\n    });\r\n  };\r\n\r\n  swap = (indexA, indexB) => {\r\n    let array = this.state.items;\r\n    if (indexB === -1) return;\r\n    if (indexB === array.length) return;\r\n    let temp = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = temp;\r\n    this.setState({\r\n      items: array,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"card\">\r\n          <Form onSubmit={this.addItem} className=\"stretch\" defaultValue=\"\" />\r\n        </section>\r\n        {this.state.items.map((item, i) => {\r\n          return (\r\n            <Entry\r\n              key={item.key}\r\n              value={item.value}\r\n              index={i}\r\n              delete={this.delete}\r\n              editItem={this.editItem}\r\n              onSwap={this.swap}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fontsource-roboto\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}