{"version":3,"sources":["components/Form.js","components/Entry.js","App.js","index.js"],"names":["Form","state","value","props","defaultValue","handleChange","event","setState","target","handleSubmit","preventDefault","onSubmit","alert","this","className","TextField","type","placeholder","onChange","IconButton","Add","color","Check","React","Component","Entry","editModeOn","checked","handleEditToggle","handleEdit","editItem","index","cla","key","onClick","onSwap","ArrowDropUp","ArrowDropDown","Checkbox","handleComplete","Typography","display","variant","Edit","delete","Delete","App","items","itemsComplete","addItem","itemObj","Date","getTime","toString","concat","filter","item","location","editedList","editedItem","swap","indexA","indexB","complete","array","length","temp","listIncomplete","listComplete","itemComplete","splice","handleIncomplete","itemIncomplete","map","i","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e432729f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Check, Add } from \"@material-ui/icons\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\n\r\nimport \"./Form.css\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    value: this.props.defaultValue,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.value === \"\") {\r\n      alert(\"Input is blank\");\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"flex center\">\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"Write a description\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n          className=\"stretch\"\r\n        />\r\n        {this.props.defaultValue === \"\" ? (\r\n          <IconButton type=\"submit\">\r\n            <Add color=\"action\" />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton type=\"submit\">\r\n            <Check color=\"action\" />\r\n          </IconButton>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { IconButton, Typography, Checkbox } from \"@material-ui/core\";\r\nimport { ArrowDropDown, ArrowDropUp, Edit, Delete } from \"@material-ui/icons\";\r\n\r\nimport \"./Entry.css\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nclass Entry extends React.Component {\r\n  state = {\r\n    editModeOn: false,\r\n    checked: false,\r\n  };\r\n\r\n  handleEditToggle = () => {\r\n    this.setState({\r\n      editModeOn: !this.state.editModeOn,\r\n    });\r\n  };\r\n\r\n  handleEdit = (value) => {\r\n    this.handleEditToggle();\r\n    this.props.editItem(value, this.props.index);\r\n  };\r\n\r\n  render() {\r\n    let cla = this.props.checked ? \"card complete\" : \"card\";\r\n\r\n    return (\r\n      <div key={this.props.index} className={cla}>\r\n        <section className=\"arrows\">\r\n          <IconButton\r\n            onClick={() =>\r\n              this.props.onSwap(\r\n                this.props.index,\r\n                this.props.index - 1,\r\n                this.props.checked\r\n              )\r\n            }\r\n          >\r\n            <ArrowDropUp color=\"action\" />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() =>\r\n              this.props.onSwap(\r\n                this.props.index,\r\n                this.props.index + 1,\r\n                this.props.checked\r\n              )\r\n            }\r\n          >\r\n            <ArrowDropDown color=\"action\" />\r\n          </IconButton>\r\n        </section>\r\n        {this.state.editModeOn ? (\r\n          // Edit mode on\r\n          <>\r\n            <Form onSubmit={this.handleEdit} defaultValue={this.props.value} />\r\n          </>\r\n        ) : (\r\n          // Edit mode off\r\n          <div className=\"flex\">\r\n            <div className=\"flex\">\r\n              <div className=\"column\">\r\n                <Checkbox\r\n                  checked={this.props.checked}\r\n                  color=\"default\"\r\n                  onClick={() => this.props.handleComplete(this.props.index)}\r\n                />\r\n                <Typography\r\n                  className=\"item-text\"\r\n                  display=\"inline\"\r\n                  variant=\"body1\"\r\n                >\r\n                  {this.props.value}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <IconButton onClick={() => this.handleEditToggle()}>\r\n                <Edit color=\"action\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"column\">\r\n          <IconButton onClick={() => this.props.delete(this.props.index)}>\r\n            <Delete color=\"action\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Entry;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Entry from \"./components/Entry\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    items: [\r\n      {\r\n        value: \"🎉 Add, edit, delete, re-order items\",\r\n        key: 1239283798272,\r\n      },\r\n      {\r\n        value: \"🍎 Grocery shopping\",\r\n        key: 9851098237510,\r\n      },\r\n      {\r\n        value: \"📚 Organize library shelves\",\r\n        key: 3498378091480,\r\n      },\r\n    ],\r\n    itemsComplete: [\r\n      {\r\n        value: \"📐 Site visit & measure dimensions\",\r\n        key: 1258972389573,\r\n      },\r\n    ],\r\n  };\r\n\r\n  addItem = (value) => {\r\n    let itemObj = { value: value, key: new Date().getTime().toString() };\r\n    this.setState({\r\n      items: this.state.items.concat(itemObj),\r\n    });\r\n  };\r\n\r\n  delete = (index) => {\r\n    this.setState({\r\n      items: this.state.items.filter((item, location) => {\r\n        return location !== index;\r\n      }),\r\n    });\r\n  };\r\n\r\n  editItem = (value, index) => {\r\n    let editedList = this.state.items;\r\n    let editedItem = {\r\n      value: value,\r\n      key: editedList[index].key,\r\n    };\r\n    editedList[index] = editedItem;\r\n\r\n    this.setState({\r\n      items: editedList,\r\n    });\r\n  };\r\n\r\n  swap = (indexA, indexB, complete) => {\r\n    let array;\r\n    if (complete === true) {\r\n      array = this.state.itemsComplete;\r\n    } else {\r\n      array = this.state.items;\r\n    }\r\n\r\n    if (indexB === -1) return;\r\n    if (indexB === array.length) return;\r\n    let temp = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = temp;\r\n\r\n    if (complete === true) {\r\n      this.setState({\r\n        itemsComplete: array,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        items: array,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleComplete = (index) => {\r\n    let listIncomplete = this.state.items;\r\n    let listComplete = this.state.itemsComplete;\r\n    let itemComplete = listIncomplete.splice(index, 1);\r\n    this.setState({\r\n      items: listIncomplete,\r\n      itemsComplete: listComplete.concat(itemComplete),\r\n    });\r\n  };\r\n\r\n  handleIncomplete = (index) => {\r\n    let listIncomplete = this.state.items;\r\n    let listComplete = this.state.itemsComplete;\r\n    let itemIncomplete = listComplete.splice(index, 1);\r\n    this.setState({\r\n      items: listIncomplete.concat(itemIncomplete),\r\n      itemsComplete: listComplete,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"card\">\r\n          <Form onSubmit={this.addItem} className=\"stretch\" defaultValue=\"\" />\r\n        </section>\r\n        {this.state.items.map((item, i) => {\r\n          return (\r\n            <Entry\r\n              key={item.key}\r\n              value={item.value}\r\n              index={i}\r\n              delete={this.delete}\r\n              editItem={this.editItem}\r\n              onSwap={this.swap}\r\n              handleComplete={this.handleComplete}\r\n              checked={false}\r\n            />\r\n          );\r\n        })}\r\n        <Typography align=\"center\">Completed</Typography>\r\n        {this.state.itemsComplete.map((item, i) => {\r\n          return (\r\n            <Entry\r\n              key={item.key}\r\n              value={item.value}\r\n              index={i}\r\n              delete={this.delete}\r\n              editItem={this.editItem}\r\n              onSwap={this.swap}\r\n              handleComplete={this.handleIncomplete}\r\n              checked={true}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fontsource-roboto\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}